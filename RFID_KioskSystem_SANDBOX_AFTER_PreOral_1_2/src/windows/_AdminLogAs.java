/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package windows;

import global.DatabaseConnection;
import global.StudentData;
import java.awt.Color;
import java.awt.Component;
import java.awt.Font;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author USER
 */
public class _AdminLogAs extends javax.swing.JPanel {
    
    private AdminLog_pan parent;

    private DefaultTableModel tableModel;
    String selectedProgram="All", selectedYear="All", selectedBlock="All";
    
    public _AdminLogAs(AdminLog_pan parent) {
        initComponents();
        this.parent = parent;
        
        setupTable();
        
        // Initialize table model with column names
        String[] columnNames = {"Surname", "Firstname", "Middlename", "RFID"};
        tableModel = new DefaultTableModel(columnNames, 0) {
            @Override
            public boolean isCellEditable(int row, int column) {
                return false; // Make cells non-editable
            }
        };

        // Set the table model to jTable1
        jTable1.setModel(tableModel);
    }
    
    
    private void setupTable() {
         try (Connection conn = DatabaseConnection.connect()) {
            if (conn != null) {
                // Perform your database operations here
                System.out.println("Database connection was successful.");
            }
        } catch (Exception e) {
            System.out.println("Error: " + e.getMessage());
        }
    }
    
    private void login(String rfid) {
        StudentData.setInLogin(false);
        
        String query = """
            SELECT s.*, p.description 
            FROM students s 
            LEFT JOIN programs p 
            ON s.program_code = p.program_code 
            WHERE s.rfid = ?;
        """;

        try (Connection conn = DatabaseConnection.connect();
             PreparedStatement stmt = conn.prepareStatement(query)) {

            stmt.setString(1, rfid);

            ResultSet rs = stmt.executeQuery();

            if (rs.next()) {
//                rfidExist = true;

                // Using setters to set values in StudentData
                StudentData.setStudentID(rs.getString("student_id"));
                StudentData.setLastName(rs.getString("last_name"));
                StudentData.setFirstName(rs.getString("first_name"));
                StudentData.setMiddleName(rs.getString("middle_name"));
                StudentData.setProgram(rs.getString("program_code"));
                StudentData.setCurriculumCode(rs.getString("curriculum_code"));
                StudentData.setYearLevel(rs.getString("current_year"));
                StudentData.setBlock(rs.getString("current_block"));
                StudentData.setTuition(rs.getDouble("current_tuition"));
                StudentData.setCurrentRFID(rfid);
                StudentData.setPin(rs.getString("pin"));
                StudentData.setStatus(rs.getString("status"));

                // Fetch program description and combine it with program code
                String programDescription = rs.getString("description");
                if (programDescription != null) {
                    StudentData.setProgramLong(programDescription + " (" + StudentData.getProgram() + ")");
                }

                System.out.println("Student found: " + StudentData.getFirstName() + " " + StudentData.getLastName());
//                TransactionRemark = StudentData.getLastName() + ", " + StudentData.getFirstName() + " - LOGGED IN";

            } else {
                System.out.println("No student found with RFID: " + rfid);
//                TransactionRemark = "UNKNOWN RFID";
//                rfidExist = false;
            }

        } catch (SQLException e) {
            System.out.println("Error retrieving student data: " + e.getMessage());
        }
                        
        Pin pinWindow = new Pin();
        pinWindow.setVisible(true);  

    }
   
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    
    
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel5 = new javax.swing.JLabel();
        jCombo_AY = new javax.swing.JComboBox<>();
        jLabel2 = new javax.swing.JLabel();
        jCombo_program = new javax.swing.JComboBox<>();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jCombo_year = new javax.swing.JComboBox<>();
        jCombo_block = new javax.swing.JComboBox<>();
        jButton_VIEW = new javax.swing.JButton();
        jButton_loginSelected = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();

        setBackground(new java.awt.Color(255, 255, 255));
        setPreferredSize(new java.awt.Dimension(1420, 800));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel5.setForeground(new java.awt.Color(0, 0, 0));
        jLabel5.setText("Academic Year");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 130, 100, 20));

        jCombo_AY.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCombo_AY.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "2024-2025" }));
        jCombo_AY.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_AYActionPerformed(evt);
            }
        });
        add(jCombo_AY, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 160, 190, -1));

        jLabel2.setForeground(new java.awt.Color(0, 0, 0));
        jLabel2.setText("Program");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 210, 60, 20));

        jCombo_program.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCombo_program.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "BEED", "BTVTED" }));
        jCombo_program.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_programActionPerformed(evt);
            }
        });
        add(jCombo_program, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 230, 190, -1));

        jLabel3.setForeground(new java.awt.Color(0, 0, 0));
        jLabel3.setText("Year Level");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 290, 60, 20));

        jLabel4.setForeground(new java.awt.Color(0, 0, 0));
        jLabel4.setText("Block");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 360, 60, 20));

        jCombo_year.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCombo_year.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "1", "2", "3", "4" }));
        jCombo_year.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_yearActionPerformed(evt);
            }
        });
        add(jCombo_year, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 310, 80, -1));

        jCombo_block.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jCombo_block.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "A", "B", "C", "D", "E" }));
        jCombo_block.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCombo_blockActionPerformed(evt);
            }
        });
        add(jCombo_block, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 380, 80, -1));

        jButton_VIEW.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_VIEW.setText("VIEW STUDENTS");
        jButton_VIEW.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_VIEWActionPerformed(evt);
            }
        });
        add(jButton_VIEW, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 440, 310, 70));

        jButton_loginSelected.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jButton_loginSelected.setText("LOG IN");
        jButton_loginSelected.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton_loginSelectedActionPerformed(evt);
            }
        });
        add(jButton_loginSelected, new org.netbeans.lib.awtextra.AbsoluteConstraints(790, 650, 270, 60));

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Surname", "Firstname", "Middlename", "RFID"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.setToolTipText("");
        jScrollPane1.setViewportView(jTable1);

        add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(480, 120, 880, 500));
    }// </editor-fold>//GEN-END:initComponents

    private void jCombo_AYActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_AYActionPerformed

    }//GEN-LAST:event_jCombo_AYActionPerformed

    private void jCombo_programActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_programActionPerformed
        selectedProgram=jCombo_program.getSelectedItem().toString();
        System.out.println("Just in selectedProgram: "+selectedProgram);
    }//GEN-LAST:event_jCombo_programActionPerformed

    private void jCombo_yearActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_yearActionPerformed
        selectedYear=jCombo_year.getSelectedItem().toString();
        System.out.println("Just in selectedYear: "+selectedYear);
    }//GEN-LAST:event_jCombo_yearActionPerformed

    private void jCombo_blockActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCombo_blockActionPerformed
        selectedBlock=jCombo_block.getSelectedItem().toString();
        System.out.println("Just in selectedBlock: "+selectedBlock);
    }//GEN-LAST:event_jCombo_blockActionPerformed

    private void jButton_VIEWActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_VIEWActionPerformed
        // Clear existing data
        tableModel.setRowCount(0);

        // SQL query with filters
        String query = "SELECT last_name, first_name, middle_name, rfid " +
        "FROM students " +
        "WHERE program_code = ? AND current_year = ? AND current_block = ? " +
        "ORDER BY last_name, first_name";

        if(selectedProgram.equals("All")){
            query = "SELECT last_name, first_name, middle_name, rfid " +
            "FROM students " +
            "ORDER BY last_name, first_name";
        }

        try (Connection conn = DatabaseConnection.connect();
            PreparedStatement pstmt = conn.prepareStatement(query)) {

            if (selectedProgram.equals("All")) {
            }else{
                // Set parameters for the query
                pstmt.setString(1, selectedProgram);
                pstmt.setString(2, selectedYear);
                pstmt.setString(3, selectedBlock);
            }
            // Execute query
            try (ResultSet rs = pstmt.executeQuery()) {
                // Process result set
                while (rs.next()) {
                    String lastName = rs.getString("last_name");
                    String firstName = rs.getString("first_name");
                    String middleName = rs.getString("middle_name");
                    String rfid = rs.getString("rfid");

                    // Add row to the table model
                    tableModel.addRow(new Object[]{lastName, firstName, middleName, rfid});
                }
            }
        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this,
                "Error fetching data: " + e.getMessage(),
                "Database Error",
                JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_jButton_VIEWActionPerformed

    private void jButton_loginSelectedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton_loginSelectedActionPerformed
        // Get the selected row index from jTable1
        int selectedRow = jTable1.getSelectedRow();

        if (selectedRow != -1) { // Ensure a row is selected
            // Retrieve data from the selected row
            String lastName = tableModel.getValueAt(selectedRow, 0).toString();
            String firstName = tableModel.getValueAt(selectedRow, 1).toString();
            String middleName = tableModel.getValueAt(selectedRow, 2).toString();
            String rfid = tableModel.getValueAt(selectedRow, 3).toString();

            login(rfid);
            parent.dispose();
            
        } else {
            // Show a message if no row is selected
            JOptionPane.showMessageDialog(
                jTable1,
                "Please select a student from the table first.",
                "No Selection",
                JOptionPane.WARNING_MESSAGE
            );
        }
    }//GEN-LAST:event_jButton_loginSelectedActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton_VIEW;
    private javax.swing.JButton jButton_loginSelected;
    private javax.swing.JComboBox<String> jCombo_AY;
    private javax.swing.JComboBox<String> jCombo_block;
    private javax.swing.JComboBox<String> jCombo_program;
    private javax.swing.JComboBox<String> jCombo_year;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
