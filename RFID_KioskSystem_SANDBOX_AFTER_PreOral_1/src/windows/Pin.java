/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package windows;

import com.mysql.cj.util.StringUtils;
import global.StudentData;
import java.awt.Color;
import java.awt.event.KeyAdapter;
import java.awt.event.KeyEvent;
import java.awt.event.MouseAdapter;
import java.awt.event.MouseEvent;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.TimerTask;
import javax.swing.JOptionPane;
import java.util.Timer;

/**
 *
 * @author USER
 */
public class Pin extends javax.swing.JFrame {

    private static final int IDLE_TIME = 30 * 1000; // 30 sec
    private Timer idleTimer;
    private TimerTask idleTask;
    
    String input="";
    public Pin() {
        initComponents();
        StudentData.setInLogin(false);
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
        
        startIdleTimer();
        
//        // Add listeners to detect user activity
//        this.addMouseListener(new MouseAdapter() {
//            @Override
//            public void mouseMoved(MouseEvent e) {
//                resetIdleTimer();
//                System.out.println("Mouse Moved");
//            }
//        });
//
//        this.addKeyListener(new KeyAdapter() {
//            @Override
//            public void keyPressed(KeyEvent e) {
//                resetIdleTimer();
//                System.out.println("Key Pressed");
//
//            }
//        });
//
//        // Reset timer on window events
//        this.addWindowListener(new WindowAdapter() {
//            @Override
//            public void windowActivated(WindowEvent e) {
//                resetIdleTimer();
//                System.out.println("Window Activated");
//            }
//        });

        
    }

    private void startIdleTimer() {
        idleTimer = new Timer();
        idleTask = new TimerTask() {
            @Override
            public void run() {
                // Action to perform after 30 minutes of inactivity
                System.out.println("User has been idle for 30 minutes.");
                btn_backtologinActionPerformed(null);
                // You can add additional actions here, like logging out the user
            }
        };
        idleTimer.schedule(idleTask, IDLE_TIME);
    }

    private void resetIdleTimer() {
        if (idleTask != null) {
            idleTask.cancel();
        }
        startIdleTimer();
        System.out.println("Timer Started");
    }

    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jlbl_showPin = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        btn_3 = new javax.swing.JButton();
        btn_1 = new javax.swing.JButton();
        btn_2 = new javax.swing.JButton();
        btn_4 = new javax.swing.JButton();
        btn_5 = new javax.swing.JButton();
        btn_6 = new javax.swing.JButton();
        btn_7 = new javax.swing.JButton();
        btn_0 = new javax.swing.JButton();
        btn_erase = new javax.swing.JButton();
        btn_8 = new javax.swing.JButton();
        btn_9 = new javax.swing.JButton();
        btn_confirm = new javax.swing.JButton();
        btn_backtologin = new javax.swing.JButton();
        lbl_TIMER = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);
        setResizable(false);
        setSize(new java.awt.Dimension(1920, 1080));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBackground(new java.awt.Color(0, 51, 102));
        jPanel1.setToolTipText("");
        jPanel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel1MouseClicked(evt);
            }
        });
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel2.setBackground(new java.awt.Color(0, 51, 102));
        jPanel2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jPanel2MouseClicked(evt);
            }
        });
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 120)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("]");
        jLabel1.setToolTipText("");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(510, 0, 100, -1));

        jlbl_showPin.setFont(new java.awt.Font("Arial", 1, 120)); // NOI18N
        jlbl_showPin.setForeground(new java.awt.Color(255, 255, 255));
        jlbl_showPin.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jlbl_showPin.setText("------");
        jlbl_showPin.setToolTipText("");
        jPanel2.add(jlbl_showPin, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 40, 460, 90));

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 120)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel3.setText("[");
        jLabel3.setToolTipText("");
        jPanel2.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 100, -1));

        btn_3.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_3.setForeground(new java.awt.Color(0, 51, 102));
        btn_3.setText("3");
        btn_3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_3ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_3, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 210, 120, 120));

        btn_1.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_1.setForeground(new java.awt.Color(0, 51, 102));
        btn_1.setText("1");
        btn_1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_1ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_1, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 210, 120, 120));

        btn_2.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_2.setForeground(new java.awt.Color(0, 51, 102));
        btn_2.setText("2");
        btn_2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_2ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_2, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 210, 120, 120));

        btn_4.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_4.setForeground(new java.awt.Color(0, 51, 102));
        btn_4.setText("4");
        btn_4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_4ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_4, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 360, 120, 120));

        btn_5.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_5.setForeground(new java.awt.Color(0, 51, 102));
        btn_5.setText("5");
        btn_5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_5ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_5, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 360, 120, 120));

        btn_6.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_6.setForeground(new java.awt.Color(0, 51, 102));
        btn_6.setText("6");
        btn_6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_6ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_6, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 360, 120, 120));

        btn_7.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_7.setForeground(new java.awt.Color(0, 51, 102));
        btn_7.setText("7");
        btn_7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_7ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_7, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 510, 120, 120));

        btn_0.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_0.setForeground(new java.awt.Color(0, 51, 102));
        btn_0.setText("0");
        btn_0.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_0ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_0, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 670, 120, 120));

        btn_erase.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_erase.setForeground(new java.awt.Color(0, 51, 102));
        btn_erase.setIcon(new javax.swing.ImageIcon(getClass().getResource("/images/erase.png"))); // NOI18N
        btn_erase.setToolTipText("");
        btn_erase.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_eraseActionPerformed(evt);
            }
        });
        jPanel2.add(btn_erase, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 670, 120, 120));

        btn_8.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_8.setForeground(new java.awt.Color(0, 51, 102));
        btn_8.setText("8");
        btn_8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_8ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_8, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 510, 120, 120));

        btn_9.setFont(new java.awt.Font("Segoe UI", 1, 48)); // NOI18N
        btn_9.setForeground(new java.awt.Color(0, 51, 102));
        btn_9.setText("9");
        btn_9.setToolTipText("");
        btn_9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_9ActionPerformed(evt);
            }
        });
        jPanel2.add(btn_9, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 510, 120, 120));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(655, 100, 610, 820));

        btn_confirm.setBackground(new java.awt.Color(255, 204, 0));
        btn_confirm.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        btn_confirm.setForeground(new java.awt.Color(0, 51, 102));
        btn_confirm.setText("CONFIRM");
        btn_confirm.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_confirmActionPerformed(evt);
            }
        });
        jPanel1.add(btn_confirm, new org.netbeans.lib.awtextra.AbsoluteConstraints(1530, 900, 320, 120));

        btn_backtologin.setBackground(new java.awt.Color(204, 0, 51));
        btn_backtologin.setFont(new java.awt.Font("Segoe UI", 1, 36)); // NOI18N
        btn_backtologin.setForeground(new java.awt.Color(255, 255, 255));
        btn_backtologin.setText("EXIT");
        btn_backtologin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_backtologinActionPerformed(evt);
            }
        });
        jPanel1.add(btn_backtologin, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 900, 320, 120));

        lbl_TIMER.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        lbl_TIMER.setForeground(new java.awt.Color(255, 255, 0));
        lbl_TIMER.setText("Timer");
        jPanel1.add(lbl_TIMER, new org.netbeans.lib.awtextra.AbsoluteConstraints(1640, 40, 160, 90));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1920, 1080));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_3ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "3"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_3ActionPerformed

    private void btn_1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_1ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "1"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_1ActionPerformed

    private void btn_2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_2ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "2"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_2ActionPerformed

    private void btn_4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_4ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "4"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_4ActionPerformed

    private void btn_5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_5ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "5"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_5ActionPerformed

    private void btn_6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_6ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "6"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_6ActionPerformed

    private void btn_7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_7ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "7"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_7ActionPerformed

    private void btn_0ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_0ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "0"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_0ActionPerformed

    private void btn_eraseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_eraseActionPerformed
        resetIdleTimer();
        if (input != null && !input.isEmpty()) {
            // Remove the last character from the input
            input = input.substring(0, input.length() - 1);

            // Build the new display string for jlbl_showPin
            StringBuilder pinDisplay = new StringBuilder();

            // Add "x" for each character in the input
            for (int i = 0; i < input.length(); i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = input.length(); i < 6; i++) {
                pinDisplay.append("-");
            }

            // Update the label
            jlbl_showPin.setText(pinDisplay.toString());
        } else {
            JOptionPane.showMessageDialog(this, "No characters to erase.", "Warning", JOptionPane.WARNING_MESSAGE);
        }
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }





//        
//        // Check if input ends with \r\n and chop accordingly
//        String result;
//        if (input.endsWith("\r\n")) {
//            result = input.substring(0, input.length() - 2);
//        } else {
//            result = input.substring(0, input.length() - 1);
//        }
//
//        // Display the result
//        JOptionPane.showMessageDialog(this, "Result after chopping: " + result, "Result", JOptionPane.INFORMATION_MESSAGE);
//        input=result;
    }//GEN-LAST:event_btn_eraseActionPerformed

    private void btn_8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_8ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "8"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
       if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_8ActionPerformed

    private void btn_confirmActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_confirmActionPerformed
        resetIdleTimer();
        System.out.println("PIN:"+input);
        
        if(StudentData.getPin().equals(input)){
                    
                    if(StudentData.getFirstName().contentEquals("ADMIN")){
                        AdminLog admin = new AdminLog();
                        admin.setVisible(true);
                    }else{
                        KioskProfile profileWindow = new KioskProfile();
                        profileWindow.setVisible(true);  
                    }
                    
                    // Hide and dispose of this window
                    setVisible(false);
                    dispose();

                }
                else{
                    
                    String popupTitle = "Warning"; 
                    String popupMessage = "PIN IS INCORRECT.";
                    int click = showCustomDialog(popupTitle, popupMessage, "None", "OK");
                    jlbl_showPin.setText("------");
                    input="";
                }
        
        
        
    }//GEN-LAST:event_btn_confirmActionPerformed

    private void btn_backtologinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_backtologinActionPerformed
        KioskLogin profileWindow = new KioskLogin(); 
        profileWindow.setVisible(true); // Hide and dispose of this window 
        setVisible(false); 
        dispose();
    }//GEN-LAST:event_btn_backtologinActionPerformed

    private void btn_9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_9ActionPerformed
        resetIdleTimer();
        StringBuilder pinDisplay = new StringBuilder();
        if (input.length() < 6) { // Use < instead of <=
            input += "9"; 
            int inputLength = input.length();

            

            // Add "x" for each character in the input
            for (int i = 0; i < inputLength; i++) {
                pinDisplay.append("x");
            }

            // Add "-" for remaining spaces
            for (int i = inputLength; i < 6; i++) {
                pinDisplay.append("-");
            }

            jlbl_showPin.setText(pinDisplay.toString());
        }
        else{
            System.out.println("reached pin length limit");
        }
        System.out.println("PinDosplay: "+pinDisplay);
        
        if(input.length()==6){
            btn_confirm.setEnabled(true);
            btn_confirm.setForeground(new Color(0, 51, 102));
        }else{
            btn_confirm.setEnabled(false);
            btn_confirm.setForeground(Color.LIGHT_GRAY);
        }
    }//GEN-LAST:event_btn_9ActionPerformed

    private void jPanel2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel2MouseClicked
        resetIdleTimer();
    }//GEN-LAST:event_jPanel2MouseClicked

    private void jPanel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jPanel1MouseClicked
        resetIdleTimer();
    }//GEN-LAST:event_jPanel1MouseClicked

    public int showCustomDialog(String title, String message, String btn1, String btn2){

        _popUp popup = new _popUp(this, true);    
        popup.showPopup(title, message, btn1,btn2); 
                
        // Handle the clicked button 
        int clickedButton = popup.getClickedButton(); 

       return clickedButton;
    }
    
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Pin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Pin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Pin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Pin.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Pin().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_0;
    private javax.swing.JButton btn_1;
    private javax.swing.JButton btn_2;
    private javax.swing.JButton btn_3;
    private javax.swing.JButton btn_4;
    private javax.swing.JButton btn_5;
    private javax.swing.JButton btn_6;
    private javax.swing.JButton btn_7;
    private javax.swing.JButton btn_8;
    private javax.swing.JButton btn_9;
    private javax.swing.JButton btn_backtologin;
    private javax.swing.JButton btn_confirm;
    private javax.swing.JButton btn_erase;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JLabel jlbl_showPin;
    private javax.swing.JLabel lbl_TIMER;
    // End of variables declaration//GEN-END:variables
}
